# This file is processed by the configure script.
# See hadrian/src/UserSettings.hs for user-defined settings.
#===========================================================

# Paths to builders:
#===================

alex           = /home/zubin/.cabal/bin/alex
ar             = ar
autoreconf     = /usr/bin/autoreconf
cc             = cc
happy          = /home/zubin/.cabal/store/ghc-8.10.7/happy-1.19.12-e-happy-f1bdfdfafef921cba96032e3d7fc25a31e92bfabcf515c0e857dda18f52047fc/bin/happy
hs-cpp         = cc
ld             = ld.lld
make           = make
nm             = nm
merge-objects  = ld.lld
objdump        = objdump
ranlib         = ranlib
sphinx-build   = /usr/bin/sphinx-build
system-ar      = ar
system-cc      = gcc
system-ghc     = /home/zubin/.ghcup/bin/ghc
system-ghc-pkg = /home/zubin/.ghcup/bin/ghc-pkg
tar            = /usr/bin/tar
patch          = /usr/bin/patch
xelatex        = /usr/bin/xelatex
makeindex      = /usr/bin/makeindex
makeinfo       = /usr/bin/makeinfo

# Python 3 is required to run test driver.
# See: https://github.com/ghc/ghc/blob/master/testsuite/mk/boilerplate.mk#L220
python         = /usr/bin/python3

# Information about builders:
#============================

ar-supports-at-file = YES
cc-llvm-backend     = NO
hs-cpp-args         = -E -undef -traditional

# Build options:
#===============

solaris-broken-shld  = NO
ghc-unregisterised   = NO
tables-next-to-code  = YES
use-libffi-for-adjustors = NO
ghc-source-path      = /home/zubin/ghcs/hs-main
leading-underscore   = NO

# Information about build, host and target systems:
#==================================================

build-platform        = x86_64-unknown-linux
build-arch            = x86_64
build-os              = linux
build-vendor          = unknown

host-platform         = x86_64-unknown-linux
host-arch             = x86_64
host-os               = linux
host-vendor           = unknown
host-os-haskell       = OSLinux
host-arch-haskell     = ArchX86_64

target-platform       = x86_64-unknown-linux
target-platform-full  = x86_64-unknown-linux
target-arch           = x86_64
target-os             = linux
target-vendor         = unknown
target-os-haskell     = OSLinux
target-arch-haskell   = ArchX86_64
llvm-target           = x86_64-unknown-linux

cross-compiling       = NO

dynamic-extension     = .so

ghc-version           = 8.10.7
ghc-major-version     = 8
ghc-minor-version     = 10
ghc-patch-level       = 7

bootstrap-threaded-rts      = YES

supports-this-unit-id = @SUPPORTS_THIS_UNIT_ID@

project-name          = The Glorious Glasgow Haskell Compilation System
project-version       = 9.0.2
project-version-int   = 900
project-patch-level   = 2
project-patch-level1  = 2
project-patch-level2  = 
project-git-commit-id = 6554ff2843d53dddeb875cb145ab892725eac54c

system-use-distro-mingw  = NO

# Compilation and linking flags:
#===============================

conf-cc-args-stage0         = 
conf-cc-args-stage1         = 
conf-cc-args-stage2         = 
conf-cc-args-stage3         = @CONF_CC_OPTS_STAGE3@

conf-cpp-args-stage0        = 
conf-cpp-args-stage1        = 
conf-cpp-args-stage2        = 
conf-cpp-args-stage3        = @CONF_CPP_OPTS_STAGE3@

conf-gcc-linker-args-stage0 = 
conf-gcc-linker-args-stage1 =  -fuse-ld=lld
conf-gcc-linker-args-stage2 =  -fuse-ld=lld
conf-gcc-linker-args-stage3 = @CONF_GCC_LINKER_OPTS_STAGE3@

conf-ld-linker-args-stage0  = 
conf-ld-linker-args-stage1  = 
conf-ld-linker-args-stage2  = 
conf-ld-linker-args-stage3  = @CONF_LD_LINKER_OPTS_STAGE3@

conf-merge-objects-args-stage0  = -r
conf-merge-objects-args-stage1  = -r
conf-merge-objects-args-stage2  = -r
conf-merge-objects-args-stage3  = -r


# Settings:
#==========

# We are in the process of moving the settings file from being entirely
# generated by configure, to generated being by the build system. Many of these
# might become redundant.
# See Note [tooldir: How GHC finds mingw on Windows]

gcc-extra-via-c-opts = 
ld-has-no-compact-unwind = NO
ld-has-build-id = YES
ld-has-filelist = NO
ld-is-gnu-ld = YES
ar-args = q

settings-c-compiler-command = cc
settings-haskell-cpp-command = cc
settings-haskell-cpp-flags = -E -undef -traditional
settings-c-compiler-flags = 
settings-cxx-compiler-flags = 
settings-c-compiler-link-flags =  -fuse-ld=lld
settings-c-compiler-supports-no-pie = YES
settings-ld-command = ld.lld
settings-ld-flags = 
settings-merge-objects-command = ld.lld
settings-merge-objects-flags = -r
settings-ar-command = ar
settings-ranlib-command = ranlib
settings-otool-command = otool
settings-install_name_tool-command = install_name_tool
settings-dll-wrap-command = /bin/false
settings-windres-command = /bin/false
settings-libtool-command = libtool
settings-touch-command = touch
settings-clang-command = clang
settings-llc-command = llc
settings-opt-command = opt

target-word-size = 8
target-word-big-endian = NO
target-has-gnu-nonexec-stack = YES
target-has-ident-directive = YES
target-has-subsections-via-symbols = NO
target-has-rts-linker = YES
target-arm-version    = 

# Include and library directories:
#=================================

curses-lib-dir    = 

iconv-include-dir = 
iconv-lib-dir     = 

intree-gmp              = NO
gmp-framework-preferred = NO
gmp-include-dir         = 
gmp-lib-dir             = 

use-system-ffi    = NO
ffi-include-dir   = 
ffi-lib-dir       = 

libdw-include-dir   = 
libdw-lib-dir       = 

libnuma-include-dir   = 
libnuma-lib-dir       = 

# Optional Dependencies:
#=======================

with-libdw = NO
with-libnuma = YES
have-lib-mingw-ex = NO
